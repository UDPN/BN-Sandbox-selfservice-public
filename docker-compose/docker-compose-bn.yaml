version: '3.6'
services:

  bn-init:
    image: udpnnetwork/bn-init:pre-v1.8.8.8.8
    container_name: bn-init
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - vn.init.file.path=/data/init/vninit.yml
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-init.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data:rw
      - ./bnserver/init/vninit.yml:/data/init/vninit.yml:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_INIT_PORT}:8080
    # depends_on:
    #   - nacos
    networks:
      - udpn-bn
    #healthcheck: 
    #  test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
    #  interval: 5s 
    #  timeout: 5s 
    #  retries: 3 
    #  start_period: 600s 

  xxl-job:
    image: udpnnetwork/udpn-xxl-job:pre-v1.0.0
    container_name: xxl-job
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${XXL_JOB_PORT}:8080
    networks:
      - udpn-bn

  bn-gateway:
    image: udpnnetwork/bn-gateway:pre-v1.8.8.8.8
    container_name: bn-gateway
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-gateway.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - ./bnserver/init:/data/init
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_GATEWAY_PORT}:8080
    networks:
      - udpn-bn
    #healthcheck: 
    #  test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
    #  interval: 5s 
    #  timeout: 5s 
    #  retries: 3 
    #  start_period: 600s 

  bn-job:
    image: udpnnetwork/bn-job:pre-v1.8.8.8.8
    container_name: bn-job
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-job.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_JOB_PORT}:8080
    depends_on:
      - bn-gateway
      - xxl-job
    networks:
      - udpn-bn

  bn-event:
    image: udpnnetwork/bn-event:pre-v1.8.8.8.8
    container_name: bn-event
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-event.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_EVENT_PORT}:8080
    depends_on:
      - bn-gateway
    networks:
      - udpn-bn

  bn-permission:
    image: udpnnetwork/bn-permission:pre-v1.8.8.8.8
    container_name: bn-permission
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-permission.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_PERMISSION_PORT}:8080
    depends_on:
      - bn-gateway
    networks:
      - udpn-bn
    #healthcheck: 
    #  test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
    #  interval: 5s 
    #  timeout: 5s 
    # retries: 3 
    #  start_period: 600s 

  bn-process:
    image: udpnnetwork/bn-processcore:pre-v1.8.8.8.8
    container_name: bn-process
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar bn-process.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_PROCESS_PORT}:8080
    depends_on:
      - bn-gateway
    networks:
      - udpn-bn
    #healthcheck: 
    #  test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
    #  interval: 5s 
    #  timeout: 5s 
    #  retries: 3 
    #  start_period: 600s 

  bn-web:
    image: udpnnetwork/bn-web:pre-v1.5.8.3.2
    container_name: bn-web
    restart: always
    volumes:
      - ${BN_DATA_VOLUMES}/bnweb/logs:/var/log/nginx
      - ./bnweb/config:/etc/nginx/conf.d/
    ports:
      - 8080:80
    depends_on:
      - bn-permission
      - bn-process
    networks:
      - udpn-bn

  web_sandbox:
    image: udpnnetwork/boxweb:pre-v1.8.8.5.5
    container_name: web_sandbox
    restart: always
    environment:
      - ENV_VN_GATEWAY=${VN_GATEWAY}
    #command: /bin/sh -c "envsubst '$${ENV_VN_GATEWAY}' </etc/nginx/conf.d/default.template> /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;' "
    command: ["/bin/sh", "-c", "exec nginx -g 'daemon off;'"]
    volumes:
      - ${BN_DATA_VOLUMES}/web_sandbox/logs:/var/log/nginx
      - ./web_sandbox/config:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - bn-permission
      - bn-process
    networks:
      - udpn-bn

networks:
  udpn-bn:
    driver: bridge
    name: udpn-bn
    external: true