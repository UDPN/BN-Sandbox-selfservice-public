version: '3.6'
services:

  mysql:
    image: mysql:5.7.33
    container_name: mysql
    restart: always
    privileged: true
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      #- MYSQL_USER=${MYSQL_USER}
      #- MYSQL_PASSWORD=${MYSQL_PWD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PWD}
      # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ${BN_DATA_VOLUMES}/mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime
    ports:
      - ${MYSQL_MASTER_PORT}:3306
    networks:
      - udpn-bn
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6.2.5
    container_name: redis
    restart: always
    privileged: true
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    command:
      --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ${BN_DATA_VOLUMES}/redis/data:/data:rw
      - ./redis/redis.conf:/redis.conf:rw
      - /etc/localtime:/etc/localtime
    privileged: true
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - udpn-bn
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
  
  nacos:
    image: nacos/nacos-server:v2.2.3
    container_name: nacos
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - DB_SERVER=10.0.131.2
      - DB_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=123456
      - DB_NAME=nacos_config
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_SYSTEM_TYPE=nacos
      - NACOS_AUTH_IDENTITY_KEY=MREsiDDoiUVS6RkTFFLZ
      - NACOS_AUTH_IDENTITY_VALUE=XPcj38vDfjLLSH2g4DaVUokFMeP86WdEt83FYyC9
      - NACOS_AUTH_TOKEN=7KvQB2FgGU2PYpSDCE3sMj5THSfJLjFA32jdHb8NS74Nou2pGmt9wU4TNbggDiiEcFZv7d     
    volumes:
       - .${BN_DATA_VOLUMES}/nacos/logs/:/home/nacos/logs
       - ./nacos/conf/application.properties:/home/nacos/conf/application.properties
    privileged: true
    ports:
      - ${NACOS_WEB_PORT}:8848
      - ${NACOS_MANAGE_PORT}:9848
      - ${NACOS_GRPC_PORT}:7848
      - ${NACOS_PUB_PORT}:9849
    networks:
      - udpn-bn
    #healthcheck:
    #  test: ["CMD-SHELL", "curl -f 'http://localhost:8848/nacos/health'|| exit 1"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 3
    depends_on:
      mysql:
        condition: service_healthy

  bninit:
    image: udpnnetwork/bn-init:v1.6.6.0.0
    container_name: bninit
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - vn.init.file.path=/data/init/vninit.yml
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    #command: 
    #  - /bin/bash
    #  - -c
    #  - "envsubst '$${ENV_VN_GATEWAY},$${ENV_VN_CODE}' </data/init/vninit.template> /data/init/vninit.yml && 
    #     envsubst '$${ENV_VN_GATEWAY},$${ENV_BESU_DID_CONTADDRESS},$${ENV_BESU_CPT_CONTADDRESS},$${ENV_BESU_AUTHISSUERADDRESS}' </data/init/did_proxy.template> /data/init/did_proxy.properties && \
    #     exec java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data:rw
      - ./bnserver/init/vninit.yml:/data/init/vninit.yml:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_INIT_PORT}:8080
    depends_on:
      - nacos
    networks:
      - udpn-bn
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 600s 

  bngateway:
    image: udpnnetwork/bn-gateway:v1.6.6.0.0
    container_name: bngateway
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - ./bnserver/init:/data/init
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_GATEWAY_PORT}:8080
    depends_on:
      - nacos
      - bninit
    networks:
      - udpn-bn
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 600s 


  bn-event:
    image: udpnnetwork/bn-event:v1.6.6.0.0
    container_name: bn-event
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_EVENT_PORT}:8080
    depends_on:
      - bngateway
    networks:
      - udpn-bn

  bnpermission:
    image: udpnnetwork/bn-permission:v1.6.6.0.0
    container_name: bnpermission
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_PERMISSION_PORT}:8080
    depends_on:
      - bngateway
    networks:
      - udpn-bn
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 600s 

  bnprocess:
    image: udpnnetwork/bn-processcore:v1.6.6.0.0
    container_name: bnprocess
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8080
      - spring.cloud.nacos.discovery.server-addr=nacos:8848
      - spring.cloud.nacos.discovery.username=nacos
      - spring.cloud.nacos.discovery.password=nacos
      - spring.cloud.nacos.discovery.namespace=bn
      - NACOS_ADDR=nacos:8848
      - NACOS_USERNAM=nacos
      - NACOS_PSW=nacos
      - NACOS_NAMESPACE=bn
    command: ["/bin/bash", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"]
    volumes:
      - ${BN_DATA_VOLUMES}/log:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${BN_PROCESS_PORT}:8080
    depends_on:
      - bngateway
    networks:
      - udpn-bn
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 600s 

  bn-web:
    image: udpnnetwork/bn-web:v1.6.6.0.0
    container_name: bn-web
    restart: always
    volumes:
      - ${BN_DATA_VOLUMES}/bnweb/logs:/var/log/nginx
      - ./bnweb/config:/etc/nginx/conf.d/
    ports:
      - 8080:80
    depends_on:
      - bnpermission
      - bnprocess
    networks:
      - udpn-bn

  web_sandbox:
    image: udpnnetwork/web_sandbox:v1.6.6.0.0
    # build:
    #   context: ./web_sandbox/
    #   dockerfile: Dockerfile-sandbox
    container_name: web_sandbox
    restart: always
    environment:
      - ENV_VN_GATEWAY=${VN_GATEWAY}
    #command: /bin/sh -c "envsubst '$${ENV_VN_GATEWAY}' </etc/nginx/conf.d/default.template> /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;' "
    command: ["/bin/sh", "-c", "exec nginx -g 'daemon off;'"]
    volumes:
      - ${BN_DATA_VOLUMES}/web_sandbox/logs:/var/log/nginx
      - ./web_sandbox/config:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - bnpermission
      - bnprocess
    networks:
      - udpn-bn

networks:
  udpn-bn:
    driver: bridge
    name: udpn-bn