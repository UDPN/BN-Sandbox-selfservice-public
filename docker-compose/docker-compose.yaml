version: '3.6'
services:

  mysql:
    image: mysql:5.7.31
    container_name: mysql
    restart: always
    ports:
      - ${MYSQL_MASTER_PORT}:3306
    privileged: true
    volumes:
      - $MYSQL_DATA/data:/var/lib/mysql
      - $MYSQL_DATA/my.cnf:/etc/mysql/my.cnf
      - /etc/localtime:/etc/localtime
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PWD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PWD}
      # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.100
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6.2.5
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    volumes:
      - $REDIS_DATA/data:/data:rw
      - $REDIS_DATA/redis.conf:/redis.conf:rw
      - /etc/localtime:/etc/localtime
    command:
      --requirepass "${REDIS_PASSWORD}"
    privileged: true
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.101
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  bneureka:
    image: udpnnetwork/redeureka:latest
    container_name: bneureka
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8761
        - logging.logpath=/data/logs
        - logging.level.root=info
        - spring.security.user.name=${EUREKA_USER}
        - spring.security.user.password=${EUREKA_PWD}
        - eureka.client.service-url.defaultZone=http://bneureka:${EUREKA_PORT}/eureka
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    ports:
        - ${EUREKA_PORT}:8761
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.102
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8761' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 60s 

  bninit:
    image: udpnnetwork/bn-init:latest
    container_name: bninit
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data:rw
        # - ${BN_DATA_VOLUMES}/init:/data/init
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8080
        - logging.logpath=${LOG_SAVE_DIR}
        - logging.level.root=info
        - mysql.master.url=jdbc:mysql://${MYSQL_MASTER_HOST}:${MYSQL_MASTER_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.master.username=${MYSQL_USER}
        - mysql.master.password=${MYSQL_PWD}
        - mysql.slave.url=jdbc:mysql://${MYSQL_SLAVE_HOST}:${MYSQL_SLAVE_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.slave.username=${MYSQL_USER}
        - mysql.slave.password=${MYSQL_PWD}
        - spring.redis.host=${REDIS_HOST}
        - spring.redis.port=${REDIS_PORT}
        - spring.redis.password=${REDIS_PASSWORD}
        - spring.redis.database=${REDIS_DATABASE}
        - vn.init.file.path=/data/init/vninit.yml
        - eureka.client.service-url.defaultZone=http://${EUREKA_USER}:${EUREKA_PWD}@bneureka:${EUREKA_PORT}/eureka
        - spring.flyway.enabled=true
        - did.proxy.properties.file=${DID_PROXY_PROP_FILE}
        - did.proxyMode=${DID_PROXY_MODE}
        - did.proxy.url=${DID_PROXY_URL}
        - besu.nodeUrl=${BESU_NODE_URL}
        - besu.nodePrivateKey=${BESU_NODE_PRIVATEKEY}
        - besu.didContAddress=${BESU_DID_CONTADDRESS}
        - besu.cptContAddress=${BESU_CPT_CONTADDRESS}
        - besu.authIssuerAddress=${BESU_AUTHISSUERADDRESS}
        - is.online=${IS_ONLINE}

        - ENV_VN_GATEWAY=${VN_GATEWAY}
        - ENV_VN_CODE=${VN_CODE}
        - ENV_BESU_DID_CONTADDRESS=${BESU_DID_CONTADDRESS}
        - ENV_BESU_CPT_CONTADDRESS=${BESU_CPT_CONTADDRESS}
        - ENV_BESU_AUTHISSUERADDRESS=${BESU_AUTHISSUERADDRESS}
    command: 
        - /bin/bash
        - -c
        - "envsubst '$${ENV_VN_GATEWAY},$${ENV_VN_CODE}' </data/init/vninit.template> /data/init/vninit.yml && 
        envsubst '$${ENV_VN_GATEWAY},$${ENV_BESU_DID_CONTADDRESS},$${ENV_BESU_CPT_CONTADDRESS},$${ENV_BESU_AUTHISSUERADDRESS}' </data/init/did_proxy.template> /data/init/did_proxy.properties && \
        exec java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    ports:
        - ${BN_INIT_PORT}:8080
    depends_on:
      bneureka:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.103
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 60s 

  bngateway:
    image: udpnnetwork/bn-gateway:latest
    container_name: bngateway
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data
        - ${BN_DATA_VOLUMES}/init:/data/init
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8080
        - logging.logpath=${LOG_SAVE_DIR}
        - logging.level.root=info
        - eureka.client.service-url.defaultZone=http://${EUREKA_USER}:${EUREKA_PWD}@bneureka:${EUREKA_PORT}/eureka
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    ports:
        - ${BN_GATEWAY_PORT}:8080
    depends_on:
      bneureka:
        condition: service_healthy
      bninit:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.104
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 60s 


  bn1-event:
    image: udpnnetwork/bn-event:latest
    container_name: bn1-event
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8080
        - logging.logpath=${LOG_SAVE_DIR}
        - logging.level.root=info
        - mysql.master.url=jdbc:mysql://${MYSQL_MASTER_HOST}:${MYSQL_MASTER_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.master.username=${MYSQL_USER}
        - mysql.master.password=${MYSQL_PWD}
        - mysql.slave.url=jdbc:mysql://${MYSQL_SLAVE_HOST}:${MYSQL_SLAVE_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.slave.username=${MYSQL_USER}
        - mysql.slave.password=${MYSQL_PWD}
        - eureka.client.service-url.defaultZone=http://${EUREKA_USER}:${EUREKA_PWD}@bneureka:${EUREKA_PORT}/eureka
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /data/bn-event-0.0.1-SNAPSHOT.jar"
    ports:
        - ${BN_EVENT_PORT}:8080
    depends_on:
      bngateway:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.105

  bnpermission:
    image: udpnnetwork/bn-permission:latest
    container_name: bnpermission
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8080
        - logging.logpath=${LOG_SAVE_DIR}
        - logging.level.root=info
        - mysql.master.url=jdbc:mysql://${MYSQL_MASTER_HOST}:${MYSQL_MASTER_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.master.username=${MYSQL_USER}
        - mysql.master.password=${MYSQL_PWD}
        - mysql.slave.url=jdbc:mysql://${MYSQL_SLAVE_HOST}:${MYSQL_SLAVE_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.slave.username=${MYSQL_USER}
        - mysql.slave.password=${MYSQL_PWD}
        - eureka.client.service-url.defaultZone=http://${EUREKA_USER}:${EUREKA_PWD}@bneureka:${EUREKA_PORT}/eureka
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /data/bn-permission-0.0.1-SNAPSHOT.jar"
    ports:
        - ${BN_PERMISSION_PORT}:8080
    depends_on:
      bngateway:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.106
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 60s 

  bnprocess:
    image: udpnnetwork/bn-processcore:latest
    container_name: bnprocess
    restart: always
    volumes: 
        - ${BN_DATA_VOLUMES}:/data
        - /etc/localtime:/etc/localtime:ro
    environment:
        - TZ=Asia/Shanghai
        - server.port=8080
        - logging.logpath=${LOG_SAVE_DIR}
        - logging.level.root=info
        - mysql.master.url=jdbc:mysql://${MYSQL_MASTER_HOST}:${MYSQL_MASTER_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.master.username=${MYSQL_USER}
        - mysql.master.password=${MYSQL_PWD}
        - mysql.slave.url=jdbc:mysql://${MYSQL_SLAVE_HOST}:${MYSQL_SLAVE_PORT}/${MYSQL_DATABASE}?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        - mysql.slave.username=${MYSQL_USER}
        - mysql.slave.password=${MYSQL_PWD}
        - spring.redis.host=${REDIS_HOST}
        - spring.redis.port=${REDIS_PORT}
        - spring.redis.password=${REDIS_PASSWORD}
        - spring.redis.database=${REDIS_DATABASE}
        - did.proxy.properties.file=${DID_PROXY_PROP_FILE}
        - eureka.client.service-url.defaultZone=http://${EUREKA_USER}:${EUREKA_PWD}@bneureka:${EUREKA_PORT}/eureka
        - did.proxyMode=${DID_PROXY_MODE}
        - did.proxy.url=${DID_PROXY_URL}
        - besu.nodeUrl=${BESU_NODE_URL}
        - besu.nodePrivateKey=${BESU_NODE_PRIVATEKEY}
        - besu.didContAddress=${BESU_DID_CONTADDRESS}
        - besu.cptContAddress=${BESU_CPT_CONTADDRESS}
        - besu.authIssuerAddress=${BESU_AUTHISSUERADDRESS}
    #command: /bin/bash -c "java -Djava.security.egd=file:/dev/./urandom -jar /data/bn-processcore-0.0.1-SNAPSHOT.jar"
    ports:
        - ${BN_PROCESS_PORT}:8080
    depends_on:
      bngateway:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.107
    healthcheck: 
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8080' || exit 1"]
      interval: 5s 
      timeout: 5s 
      retries: 3 
      start_period: 60s 

  bn-web:
    image: udpnnetwork/bn-web:latest
    container_name: bn-web
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./bnweb/logs:/var/log/nginx
      - ./bnweb/config:/etc/nginx/conf.d/
    depends_on:
      bnpermission:
        condition: service_healthy
      bnprocess:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.108

  web_sandbox:
    image: udpnnetwork/web_sandbox:latest
    # build:
    #   context: ./web_sandbox/
    #   dockerfile: Dockerfile-sandbox
    container_name: web_sandbox
    restart: always
    ports:
      - 80:80
    volumes:
      - ./web_sandbox/logs:/var/log/nginx
      - ./web_sandbox/config:/etc/nginx/conf.d
    environment:
     - ENV_VN_GATEWAY=${VN_GATEWAY}
    command: /bin/sh -c "envsubst '$${ENV_VN_GATEWAY}' </etc/nginx/conf.d/default.template> /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;' "
    depends_on:
      bnpermission:
        condition: service_healthy
      bnprocess:
        condition: service_healthy
    networks:
      udpn-bn:
        ipv4_address: 172.16.137.109

networks:
  udpn-bn:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.137.0/24
